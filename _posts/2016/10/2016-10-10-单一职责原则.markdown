---
layout: post
tags: 设计模式，单一职责
date: 2016-10-10 16:09:35
title: 单一职责原则
categories:
- 2016
---



# 第1章　单一职责原则（Single Responsibility Principle，SRP）
```java
There should never be more than one reason for a class to change.
```

---
## 单一职责原则有什么好处：
- 类的复杂性降低，实现什么职责都有清晰明确的定义；
- 可读性提高，复杂性降低，那当然可读性提高了；
- 可维护性提高，可读性提高，那当然更容易维护了；
- 变更引起的风险降低，变更是必不可少的，如果接口的单一职责做得好，一个接口修改只对相应的实现类有影响，对其他的接口无影响，这对系统的扩展性、维护性都有非常大的帮助。

        单一职责原则提出了一个编写程序的标准，用“职责”或“变化原因”来衡量接口或类设计得是否优良，但是“职责”和“变化原因”都是不可度量的，因项目而异，因环境而异。


## 单一职责适用于接口、类，同时也适用于方法，
      什么意思呢？一个方法尽可能做一件事情，
比如一个方法修改用户密码，不要把这个方法放到“修改用户信息”方法中，这个方法的颗粒度很粗
## 特点：简单，直接，单一

## 应用地方：
        - 1.接口（一定要满足单一职责）
        - 2.实现类（综合考虑,尽量做到只有一个原因引起变化）
        - 3.方法（必须满足单一职责）【不要让别人猜测这个方法可能是用来处理什么逻辑】